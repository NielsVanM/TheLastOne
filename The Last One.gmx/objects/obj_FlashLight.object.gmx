<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
sizeNormal = 256;
sizeHidden = 128;
global.size = 0;

flashLightOn = false;
flashLightWorking = true;
global.flashLightBattery = 100;
batteryDrain = 0.3 //Per second
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flashlight mechanics

//Toggle flashlight
if (keyboard_check_pressed(ord('L')))
{
    if (flashLightOn = true){flashLightOn = false;}else{flashLightOn = true;}
}

//If flashlight is on draw ellipse
if (flashLightOn = true &amp;&amp; flashLightWorking = true)
{

    //Set size
    global.size = sizeNormal;
    if (global.hide = true){global.size = sizeHidden;}    

    //Setting blend mode &amp; target surface
    draw_set_blend_mode(bm_subtract);
    surface_set_target(global.light);
    
    //Drawing light to surface
    draw_ellipse_colour(x-global.size/2-view_xview,y-global.size/2-view_yview,x+global.size/2-view_xview,y+global.size/2-view_yview,c_white,c_black,false)
    
    //Reseting blend mode &amp; target surface
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
}

//Locking flashlight to player
x = obj_Player.x;
y = obj_Player.y;

//Flashlight battery drain
if (flashLightOn = true &amp;&amp; global.hide = false){global.flashLightBattery -= batteryDrain / room_speed;}
else if (flashLightOn = true &amp;&amp; global.hide = true){global.flashLightBattery -= (batteryDrain / room_speed) / 2;}

//If battery is empty disable flashlight
if (global.flashLightBattery &lt; 0){global.flashLightBattery = 0;}
if (global.flashLightBattery = 0){flashLightWorking = false;}
if (global.flashLightBattery &gt; 0){flashLightWorking = true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

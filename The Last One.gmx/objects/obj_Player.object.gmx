<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Player_Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
//Movement
normalMoveSpeed = 2;
runMoveSpeed = 4;
hSpeed = 0;
vSpeed = 0;
normalImgSpeed = 0.2;
runImgSpeed = 0.4;
verticalLock = false;
horizontalLock = false;
global.playerRun = true;

//Water, Food &amp; Health system
pWater = 100;
pFood = 100;
pHealth = 100;
pWaterDecay = 0.3; //Per second
pFoodDecay = 0.3; //Per Second
pWaterDamage = 1; //Per Second
pFoodDamage = 1; //Per Second
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create light
instance_create(x,y,obj_FlashLight);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
//User input
keyRight = keyboard_check(ord('D'));
keyLeft = -keyboard_check(ord('A'));
keyUp = -keyboard_check(ord('W'));
keyDown = keyboard_check(ord('S'));
keySprint = keyboard_check(vk_shift);

//Sprinting mechanism
moveSpeed = normalMoveSpeed;
imgSpeed = normalImgSpeed;
if (keySprint = 1){moveSpeed = runMoveSpeed; imgSpeed = runImgSpeed;}

//Calculating movement
hMove = keyLeft + keyRight;
vMove = keyUp + keyDown;
hSpeed = hMove * moveSpeed;
vSpeed = vMove * moveSpeed;

//Locking Vertical Movement &amp; changing Sprites
if (hMove == 0 &amp;&amp; vMove == 0){image_speed = 0; image_index = 1;}
if (horizontalLock = false)
{
    if (hMove = 1 or hMove = -1)
    {
        vSpeed = 0;
        verticalLock = true;
        if (hMove = 1){sprite_index = spr_Player_Right; image_speed = imgSpeed; global.faceDirection = 90;}
        if (hMove = -1){sprite_index = spr_Player_Left; image_speed = imgSpeed; global.faceDirection = 270;}
    }
    else
    {
        verticalLock = false;
    }
}
//Locking Horizontal Movement &amp; changing Sprites
if (verticalLock = false)
{
    if (vMove = 1 or vMove = -1)
    {
        hSpeed = 0;
        horizontalLock = true;
        if (vMove = 1){sprite_index = spr_Player_Down; image_speed = imgSpeed; global.faceDirection = 180;}
        if (vMove = -1){sprite_index = spr_Player_Up; image_speed = imgSpeed; global.faceDirection = 0;}
    }
    else
    {
        horizontalLock = false
    }
}

//Horizontal collision
if (place_meeting(x+hSpeed,y,obj_Collision))
{
    while (!place_meeting(x+sign(hSpeed),y,obj_Collision))
    {
        x += sign(hSpeed);
    }
    hSpeed = 0;
}
//Vertical collision
if (place_meeting(x,y+vSpeed,obj_Collision))
{
    while (!place_meeting(x,y+sign(vSpeed),obj_Collision))
    {
        y += sign(vSpeed);
    }
    vSpeed = 0;
}

//Changing x and y
x += hSpeed;
y += vSpeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Water, Food &amp; Health system
//Health

//Hurt if water is too low
if (pWater = 0){pHealth -= pWaterDamage / room_speed;}
//Hurt if food is too low
if (pFood = 0){pHealth -= pFoodDamage / room_speed;}

//Death
if (pHealth &lt;= 0){/*Death animation*/}


//Water
//Water decay
pWater -= pWaterDecay / room_speed;
//Value is always between 0 - 100
if (pWater &gt; 100){pWater = 100;}
if (pWater &lt; 0){pWater = 0;}

//Food
//Food decay
pFood -= pFoodDecay / room_speed;
//Value is always between 0 - 100
if (pFood &gt; 100){pFood = 100;}
if (pFood &lt; 0){pFood = 0;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth correction
depth = y * -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw player
if (global.hide = false){draw_self();}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG DELETE WHEN COMPILING
draw_set_font(fnt_Instructions);
if (global.debug = true)
{
    draw_text(x,y+10,x);
    draw_text(x,y+20,y);
    draw_text(x,y+30,pWater);
    draw_text(x,y+40,pFood);
    draw_text(x,y+50,pHealth);
    draw_text(x,y+60,global.flashLightBattery);
    draw_text(x,y+70,global.size);
    if instance_exists(obj_Zombie1_AI){draw_text(x,y+80,global.walkCooldown);}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>

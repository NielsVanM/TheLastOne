<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
spawnRate = 2000; //Higher = less chance of spawning
maxSpawned = 20;
spawnXMarge = 0;
spawnYMarge = 0;
minRange = 64;
maxRange = 128;
canSpawn = false;
zombieAmount = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawning zombies
//Pause spawning
if (global.pause = true){
    exit;
}

//Set location to player
x = obj_Player.x;
y = obj_Player.y;

zombieAmount = instance_number(obj_Zombie_AI);
canSpawn = irandom(spawnRate);

//Calculate spawnmarge
spawnXSide = choose(-1,1);
spawnYSide = choose(-1,1);
spawnXMarge = irandom(maxRange);
spawnYMarge = irandom(maxRange);

//Checking circumstances
if (room = rm_MainWorld_New){
    if(zombieAmount &lt; maxSpawned) &amp;&amp; (canSpawn = 1){
        if (place_meeting(spawnXMarge,spawnYMarge,obj_Collision)){
            while(place_meeting(spawnXMarge,spawnYMarge,obj_Collision)){
                while(spawnXMarge &lt; minRange){
                    spawnXMarge = irandom(maxRange);
                }
                while(spawnYMarge &lt; minRange){
                    spawnYMarge = irandom(maxRange);
                }
            }
        } else {
            instance_create(x + (spawnXMarge * spawnXSide),y + (spawnYMarge * spawnYSide),obj_Zombie_AI);
            canSpawn = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
